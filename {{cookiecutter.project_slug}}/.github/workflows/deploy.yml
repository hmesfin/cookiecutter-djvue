{% if cookiecutter.ci_tool == 'github' -%}
name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '{{ cookiecutter.python_version }}'
  NODE_VERSION: '{{ cookiecutter.node_version }}'

jobs:
  build:
    name: Build and Push Images
    runs-on: ubuntu-latest
    outputs:
      version: {% raw %}${{ steps.version.outputs.version }}{% endraw %}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Generate version
      id: version
      run: |
        VERSION=$(date +%Y%m%d)-{% raw %}${{ github.run_number }}{% endraw %}-$(echo {% raw %}${{ github.sha }}{% endraw %} | cut -c1-7)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: $VERSION"
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: {% raw %}${{ secrets.REGISTRY_URL }}{% endraw %}
        username: {% raw %}${{ secrets.REGISTRY_USERNAME }}{% endraw %}
        password: {% raw %}${{ secrets.REGISTRY_PASSWORD }}{% endraw %}
    
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/backend/Dockerfile
        push: true
        tags: |
          {% raw %}${{ secrets.REGISTRY_URL }}{% endraw %}/{{ cookiecutter.project_slug }}-backend:{% raw %}${{ steps.version.outputs.version }}{% endraw %}
          {% raw %}${{ secrets.REGISTRY_URL }}{% endraw %}/{{ cookiecutter.project_slug }}-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/frontend/Dockerfile
        target: production
        push: true
        tags: |
          {% raw %}${{ secrets.REGISTRY_URL }}{% endraw %}/{{ cookiecutter.project_slug }}-frontend:{% raw %}${{ steps.version.outputs.version }}{% endraw %}
          {% raw %}${{ secrets.REGISTRY_URL }}{% endraw %}/{{ cookiecutter.project_slug }}-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: staging
      url: https://staging.{{ cookiecutter.domain_name }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "Deploying version {% raw %}${{ needs.build.outputs.version }}{% endraw %} to staging"
        # Add your deployment script here
        # Examples:
        # - SSH and docker-compose pull & up
        # - Kubernetes kubectl apply
        # - Cloud provider CLI (aws, gcloud, az)
        # - Platform deployment (Heroku, DigitalOcean App Platform)
    
    - name: Run smoke tests
      run: |
        # Add smoke test commands
        curl -f https://staging.{{ cookiecutter.domain_name }}/api/health/ || exit 1

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, deploy-staging]
    environment:
      name: production
      url: https://{{ cookiecutter.domain_name }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deploying version {% raw %}${{ needs.build.outputs.version }}{% endraw %} to production"
        # Add your production deployment script here
    
    - name: Create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
      with:
        tag_name: v{% raw %}${{ needs.build.outputs.version }}{% endraw %}
        release_name: Release {% raw %}${{ needs.build.outputs.version }}{% endraw %}
        body: |
          ## Changes in this release
          - Automated deployment of {% raw %}${{ github.sha }}{% endraw %}
          
          ## Docker Images
          - Backend: {% raw %}${{ secrets.REGISTRY_URL }}{% endraw %}/{{ cookiecutter.project_slug }}-backend:{% raw %}${{ needs.build.outputs.version }}{% endraw %}
          - Frontend: {% raw %}${{ secrets.REGISTRY_URL }}{% endraw %}/{{ cookiecutter.project_slug }}-frontend:{% raw %}${{ needs.build.outputs.version }}{% endraw %}
        draft: false
        prerelease: false
    
    - name: Notify deployment
      if: always()
      run: |
        # Add notification logic (Slack, Discord, email, etc.)
        echo "Deployment completed with status: {% raw %}${{ job.status }}{% endraw %}"
{%- endif %}