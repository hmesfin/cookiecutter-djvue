#!/bin/bash
set -e

# Set Python path to ensure imports work correctly
export PYTHONPATH=/app:$PYTHONPATH

echo "Waiting for database..."

{% if cookiecutter.database == 'postgresql' -%}
# Wait for PostgreSQL to be ready
until PGPASSWORD=changeme psql -h postgres -U {{ cookiecutter.project_slug }} -d {{ cookiecutter.project_slug }} -c '\q' 2>/dev/null; do
  echo "PostgreSQL is unavailable - sleeping"
  sleep 1
done
echo "PostgreSQL is ready"
{% elif cookiecutter.database == 'mysql' -%}
# Wait for MySQL to be ready
until mysql -h mysql -u {{ cookiecutter.project_slug }} -pchangeme -e "SELECT 1" &>/dev/null; do
  echo "MySQL is unavailable - sleeping"  
  sleep 1
done
echo "MySQL is ready"
{%- endif %}

# Give the database a moment to fully initialize
sleep 2

# Run migrations
echo "Running database migrations..."
python manage.py migrate --noinput

# Collect static files
echo "Collecting static files..."
python manage.py collectstatic --noinput

# Create superuser if it doesn't exist
echo "Creating superuser if needed..."
python manage.py shell -c "
from django.contrib.auth import get_user_model
User = get_user_model()
if not User.objects.filter(email='admin@example.com').exists():
    User.objects.create_superuser(
        email='admin@example.com',
        username='admin',
        password='admin123'
    )
    print('Superuser created: admin@example.com / admin123')
else:
    print('Superuser already exists')
" || echo "Could not create superuser automatically"

# Start server
echo "Starting Django development server..."
exec python manage.py runserver 0.0.0.0:8000