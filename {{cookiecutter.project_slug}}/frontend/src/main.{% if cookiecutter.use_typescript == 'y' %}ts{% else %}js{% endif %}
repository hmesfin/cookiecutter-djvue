import { createApp } from 'vue'
import { createPinia } from 'pinia'
import App from './App.vue'
import router from './router'
{% if cookiecutter.css_framework == 'bootstrap-vue-3' -%}
import { BootstrapVue3 } from 'bootstrap-vue-3'
import 'bootstrap/dist/css/bootstrap.css'
import 'bootstrap-vue-3/dist/bootstrap-vue-3.css'
{% elif cookiecutter.css_framework == 'tailwindcss' -%}
import './assets/tailwind.css'
{%- endif %}
{% if cookiecutter.use_i18n == 'y' -%}
import i18n from './i18n'
{%- endif %}
import './assets/main.css'

const app = createApp(App)

// Create and install Pinia
const pinia = createPinia()
app.use(pinia)

// Initialize auth state from localStorage before mounting the app
import { useAuthStore } from '@/stores/auth'
const authStore = useAuthStore(pinia)

// Initialize auth state (this will restore user session if valid)
authStore.initializeAuth().catch(error => {
  console.error('Auth initialization error:', error)
})

app.use(router)
{% if cookiecutter.css_framework == 'bootstrap-vue-3' -%}
app.use(BootstrapVue3)
{%- endif %}
{% if cookiecutter.use_i18n == 'y' -%}
app.use(i18n)
{%- endif %}

app.mount('#app')