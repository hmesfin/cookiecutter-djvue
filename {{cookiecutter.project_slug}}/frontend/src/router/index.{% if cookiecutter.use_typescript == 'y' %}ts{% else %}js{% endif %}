import { createRouter, createWebHistory } from 'vue-router'
import { useAuthStore } from '@/stores/auth'
{% if cookiecutter.use_typescript == 'y' %}
import type { RouteRecordRaw } from 'vue-router'
{% endif %}

// Import module routers
import homeRoutes from '@/modules/home/router'
import authRoutes from '@/modules/auth/router'
import dashboardRoutes from '@/modules/dashboard/router'

// Combine all routes
const routes{% if cookiecutter.use_typescript == 'y' %}: RouteRecordRaw[]{% endif %} = [
  ...homeRoutes,
  ...authRoutes,
  ...dashboardRoutes,
  
  // 404 catch-all route
  {
    path: '/:pathMatch(.*)*',
    name: 'not-found',
    component: () => import('@/components/NotFoundView.vue')
  }
]

const router = createRouter({
  history: createWebHistory(import.meta.env.BASE_URL),
  routes
})

// Navigation guards
router.beforeEach((to, from, next) => {
  const authStore = useAuthStore()
  const isAuthenticated = authStore.isAuthenticated
  
  if (to.meta.requiresAuth && !isAuthenticated) {
    next({ name: 'Login', query: { redirect: to.fullPath } })
  } else if (to.meta.requiresGuest && isAuthenticated) {
    next({ name: 'Dashboard' })
  } else {
    next()
  }
})

export default router